.container.px-5.px-sm-0.py-3
  .row
    = render 'books/list', book: @book, user: @user
    .col-md-8.offset-md-1
      h2
        | Books
      table.table.table-hover
        thead
          tr
            th
            th
              | Title
            th
              | Opinion
            th[colspan="3"]
            th[colspan="3"]
        tbody
          - @books.each do |book|
            tr
              td
                = link_to user_path(@user) do
                  = attachment_image_tag book.user, :profile_image, size: "40x40", fallback: "no_image.jpg"
              td
                = link_to book.title, book_path(book)
              td
                = book.body
              td
                | コメント数：
                = book.book_comments.count
              td
                |  <div id="rate_
                = book.id
                | ">
    script
      |  $('#rate_<ruby code="= book.id"></ruby>').raty({ size: 20, starOff: '<ruby code="= asset_path('star-off.png')"></ruby>', starOn : '<ruby code="= asset_path('star-on.png')"></ruby>', starHalf: '<ruby code="= asset_path('star-half.png')"></ruby>', half: true, readOnly: true, score: <ruby code="= book.rate"></ruby>, }); 
    td
      | 閲覧数: 
      = book.impressionist_count
    .my-3
      = form_with url: user_search_path(@user), method: :get do |f|
        = f.date_field :created_at
        = f.submit '検索', class: 'btn btn-primary'
    #search_result
      - if @search_book.present?
        = render 'search', search_book: @search_book
    table.table.table-bordered
      thead
        tr
          th
            | 今日の投稿数
          th
            | 前日の投稿数
          th
            | 前日比
      tbody
        tr
          td
            = @today_books.count
          td
            = @yesterday_books.count
          td
            - if @yesterday_books.count == 0
              |  前日の投稿が0のため計算できません 
            - else
              = (@today_books.count / @yesterday_books.count) * 100
              | % 
    table.table.table-bordered
      thead
        tr
          th
            | 今週の投稿数
          th
            | 前週の投稿数
          th
            | 前週比
      tbody
        tr
          td
            = @this_week_books.count
          td
            = @last_week_books.count
          td
            - if @last_week_books.count == 0
              |  前週の投稿が0のため計算できません 
            - else
              = (@this_week_books.count / @last_week_books.count) * 100
              | % 
    h4
      | 7日間分の投稿数
    table.table.table-bordered
      thead
        tr
          th
            | ６日前
          th
            | ５日前
          th
            | ４日前
          th
            | ３日前
          th
            | ２日前
          th
            | １日前
          th
            | 今日
      tbody
        tr
          td
            = @books.created_6day_ago.count
          td
            = @books.created_5day_ago.count
          td
            = @books.created_4day_ago.count
          td
            = @books.created_3day_ago.count
          td
            = @books.created_2day_ago.count
          td
            = @books.created_yesterday.count
          td
            = @books.created_today.count
    canvas#myLineChart
    script[src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.js"]
    script
      |  $(document).on('turbolinks:load', function() { var ctx = document.getElementById("myLineChart"); var myLineChart = new Chart(ctx, { type: 'line', data: { labels: ['6日前', '5日前', '4日前', '3日前', '2日前', '1日前', '今日'], datasets: [ { label: '投稿した本の数', data: [<ruby code="= @books.created_6day_ago.count"></ruby>, <ruby code="= @books.created_5day_ago.count"></ruby>, <ruby code="= @books.created_4day_ago.count"></ruby>, <ruby code="= @books.created_3day_ago.count"></ruby>, <ruby code="= @books.created_2day_ago.count"></ruby>, <ruby code="= @books.created_yesterday.count"></ruby>, <ruby code="= @books.created_today.count"></ruby>], borderColor: "rgba(0,0,255,1)", backgroundColor: "rgba(0,0,0,0)" } ], }, options: { title: { display: true, text: '7日間の投稿数の比較' }, scales: { yAxes: [{ ticks: { suggestedMax: 10, suggestedMin: 0, stepSize: 1, callback: function(value, index, values){ return value } } }] }, } }); }); 
